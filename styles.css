body {
	font-family: "Roboto", sans-serif;
	margin: 0; /* Remove default margin */
	padding: 0; /* Remove default padding */
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	height: 100vh;
	background-color: #48494b;
}
h1 {
	font-size: 30px;
	color: #999da0;
	margin-top: 0px;
}

#avatarBTdiv {
	margin-bottom: 20px;
	width: 100vw;
	height: 16vh;
	position: relative;
}

.top-section,
.bottom-section {
	width: 100%;
	height: 50%; /* Each section takes 50% of the height */
	display: flex;
	align-items: center;
	justify-content: center;
}

#currentLocation {
	width: 90%;
	text-align: center;
	color: #999da0; /* Black text color */
	font-size: 16px; /* Text size */
}

#consoleOutput {
	width: 90%;
	text-align: center;
	color: #999da0; /* Black text color */
	font-size: 14px; /* Text size */
	font-family: "Courier New", Courier, monospace; /* Console */
}

#logoSpace {
	width: 80%;
	text-align: center;
}

#currentLocation,
#consoleOutput {
	font-size: 12px; /* Text size */
}

#messageDisplayDiv {
	font-weight: 100;
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	max-height: 100vh;
	background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black background */
	color: white;
	font-size: 9vw; /* Very big text size */
	opacity: 0; /* Initially hidden */
	visibility: hidden; /* Prevent interactions */
	z-index: 9999; /* Ensure it appears above other content */
	text-align: center; /* Center align the text */
	padding-top: 0vh; /* Vertical padding to center the text */
	transition: opacity 0.5s ease, visibility 0.5s ease; /* Smooth transitions */
}

#messageDisplayDiv.visible {
	opacity: 1; /* Fully visible */
	visibility: visible; /* Allow interactions */
}

.button {
	background-color: #4caf50; /* Green */
	width: 96%; /* Adjust the width as needed */
	border: none;
	color: white;
	padding: 15px 32px;
	text-align: center;
	text-decoration: none;
	display: inline-block;
	font-size: 16px;
	margin: 12px;
	cursor: pointer;
	border-radius: 8px;
	font-family: "Roboto", sans-serif;
}

.listen-button {
	background-color: #4caf50; /* Green */
	color: white; /* Text color */
	margin-right: 2%; /* Adjust spacing between buttons */
	width: 48%; /* Adjusted width for each button */
	display: inline-block;
	box-sizing: border-box; /* Ensure padding and border are included in width */
}

.interact-button {
	background-color: #4caf50; /* Blue */
	color: white; /* Text color */
	margin-left: 2%; /* Adjust spacing between buttons */
	width: 48%; /* Adjusted width for each button */
	display: inline-block;
	box-sizing: border-box; /* Ensure padding and border are included in width */
}

.logo {
	max-width: 90vw;
}

/* Disconnect button style */
#connectButton {
	background-color: #0082fc; /* Blue */
}

#dismissButton {
	background-color: #ffffff; /* White */
	color: black;
	width: 60%; /* Adjust the width as needed */
	position: absolute; /* Position absolute */
	box-sizing: border-box; /* Include padding and border in the width */

	/* Center the button both horizontally and vertically */
	position: absolute;
	bottom: 35px;
	left: 0;
	right: 0;
	margin: auto;
}

/* Style for disabled */
#connectButton[disabled] {
	background-color: #dddddd; /* Light gray */
	color: #aaaaaa; /* Dark gray */
	cursor: not-allowed;
}

#hachiCheckboxContainer {
	position: fixed;
	bottom: 10px;
	left: 10px;
}

.hachiLabel {
	font-size: 14px;
	color: #333;
}

/* Toggle switch container */
#toggleContainer {
	display: flex;
	align-items: center;
	justify-content: center;
	margin: 4px;
	width: 50%;
}

/* Toggle switch */
.switch {
	position: relative;
	display: inline-block;
	width: 60px;
	height: 34px;
}

.switch input {
	opacity: 0;
	width: 0;
	height: 0;
}

.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: #0082fc;
	transition: 0.4s;
	border-radius: 34px;
}

.slider:before {
	position: absolute;
	content: "";
	height: 26px;
	width: 26px;
	left: 4px;
	bottom: 4px;
	background-color: white;
	transition: 0.4s;
	border-radius: 50%;
}

input:checked + .slider {
	background-color: #4caf50;
}

input:checked + .slider:before {
	transform: translateX(26px);
}

/* Labels for the toggle */
#buroToggle,
#hachiToggle {
	display: flex;
	align-items: center; /* Center vertically */
	flex-direction: column; /* Stack items vertically */
	text-align: center; /* Center text */
	justify-content: center; /* Center horizontally */
	margin: 10px;
	font-size: 16px;
	font-family: "Roboto", sans-serif;
	color: white;
}

.material-symbols-outlined {
	vertical-align: middle;
	/* Adjust other styles for the symbol as needed */
}

#loading-screen {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: rgb(0, 0, 0);
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 9999; /* Ensure it's on top of everything else */
	flex-direction: column; /* Stack children vertically */
	opacity: 1; /* Fully visible */
	transition: opacity 1s ease; /* Smooth transition over 0.5 seconds */
}

#loading-screen.hidden {
	opacity: 0; /* Fully transparent */
	pointer-events: none; /* Avoid interaction when hidden */
}

#loading-text {
	font-weight: bold;
	text-transform: uppercase;
	color: #ffffff;
}

.hearing-icon {
	text-shadow: 10px 10px 15px rgba(0, 0, 0, 0.3);
	font-size: 40vh; /* Set the size of the hearing icon */
	vertical-align: middle; /* Align the icon */
}

.center-wrapper {
	display: flex; /* Use flexbox to arrange items */
	flex-direction: column; /* Stack items vertically */
	justify-content: center; /* Center the items vertically */
	align-items: center; /* Center the items horizontally */
	text-align: center; /* Ensure text inside spans is also centered */
	width: 100%; /* Ensure the wrapper takes up full width */
	height: 100%; /* Ensure the wrapper takes up full height */
	padding-bottom: 20vh;
}

/* Target the hachi.svg image */
#avatarCanvas img.hachi_control {
    display: block; /* Ensure it behaves as a block-level element */
    width: 100vw; /* Make it take 100% of the width of its parent (avatarCanvas) */
    height: auto; /* Maintain aspect ratio */
}

.control-button {
	position: absolute;
	padding: 10px 15px;
	border: 1px solid #ccc;
	background-color: white;
	cursor: pointer;
	border-radius: 20px;
	font-size: 14px;
	font-weight: bold;
	color: black;
}

/* Position the buttons relative to the avatarCanvas using percentages */
#bark_btn {
	top: 49%;
	left: 31%;
}

#sniff_btn {
	top: 41%;
	right: 75%;
}

#jump_btn {
	top: 73%;
	left: 52%;
	transform: translate(-50%, -50%);
}

#back_btn {
	bottom: 14%;
	left: 59%;
}

#grab_btn {
	bottom: 28%;
	left: 4%;
}

#front_btn {
	bottom: 14%;
	right: 59%;
}
